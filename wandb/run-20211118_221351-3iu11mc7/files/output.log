cju430pm2lz0y0755jkhcc3d1.*
cju430pm2lz0y0755jkhcc3d1.*
566.*
566.*
cju8axq24r4an0755yhv9d4ly.*
cju8axq24r4an0755yhv9d4ly.*
cju34repocy5208780gswillm.*
cju34repocy5208780gswillm.*
566  --------
img: 82944
mask: 27648
cjyzul1qggwwj07216mhiv5sy.*
cjyzul1qggwwj07216mhiv5sy.*
cju8axq24r4an0755yhv9d4ly  --------
img: 239295
mask: 239295
cju42tauqlo5p08171l3cuo4b.*
cju42tauqlo5p08171l3cuo4b.*
cju34repocy5208780gswillm  --------
img: 246312
mask: 246312
cju430pm2lz0y0755jkhcc3d1  --------
img: 256347
mask: 256347
405.*
405.*
cju2ulk385h170799rlklxob0.*
cju2ulk385h170799rlklxob0.*
405  --------
img: 82944
mask: 27648
585.*
585.*
cju42tauqlo5p08171l3cuo4b  --------
img: 256347
mask: 256347
cju30k2z40ds308353kdew70n.*
cju30k2z40ds308353kdew70n.*
585  --------
img: 82944
mask: 27648
416.*
416.*
cju2ulk385h170799rlklxob0  --------
img: 236016
mask: 236016
cju88msmoo3470817m441j4sg.*
cju88msmoo3470817m441j4sg.*
416  --------
img: 82944
mask: 27648
421.*
421.*
421  --------
img: 82944
mask: 27648
cju30k2z40ds308353kdew70n  --------
img: 244728
mask: 244728
cju77k828z46w0871r0avuoo9.*
cju77k828z46w0871r0avuoo9.*
217.*
217.*
cju88msmoo3470817m441j4sg  --------
img: 244065
mask: 244065
cju5woy82m07m08505dmjg7g1.*
cju5woy82m07m08505dmjg7g1.*
217  --------
img: 82944
mask: 27648
cju3y54kwj3nr0801biidlb4e.*
cju3y54kwj3nr0801biidlb4e.*
cju77k828z46w0871r0avuoo9  --------
img: 247245
mask: 247245
293.*
293.*
293  --------
img: 82944
mask: 27648
cju3y54kwj3nr0801biidlb4e  --------
img: 253890
mask: 253890
363.*
363.*
cju2phaksnahz0993yxogjcpv.*
cju2phaksnahz0993yxogjcpv.*
363  --------
img: 82944
mask: 27648
cju2y0z6g87p10878fpk5d3rq.*
cju2y0z6g87p10878fpk5d3rq.*
cjyzul1qggwwj07216mhiv5sy  --------
img: 1543680
mask: 1543680
cju2phaksnahz0993yxogjcpv  --------
img: 246312
mask: 246312
cju2ysg748ru80878sp6j0gm0.*
cju2ysg748ru80878sp6j0gm0.*
cju2y0z6g87p10878fpk5d3rq  --------
img: 220215
mask: 220215
422.*
422.*
498.*
498.*
422  --------
img: 82944
mask: 27648
498  --------
img: 82944
mask: 27648
cju43b8daly4408170e5ev06g.*
cju43b8daly4408170e5ev06g.*
cju2ysg748ru80878sp6j0gm0  --------
img: 234234
mask: 234234
cju892fesoq2g0801n0e0jyia.*
cju892fesoq2g0801n0e0jyia.*
cju5woy82m07m08505dmjg7g1  --------
img: 1081770
mask: 1081770
cju43b8daly4408170e5ev06g  --------
img: 238500
mask: 238500
cju892fesoq2g0801n0e0jyia  --------
img: 240786
mask: 240786
cju3y21quj0ir0818kgjagr15.*
cju3y21quj0ir0818kgjagr15.*
cju1f15k3w4ct0835cmde6ypo.*
cju1f15k3w4ct0835cmde6ypo.*
cju2xlcqxy9c60988vjacdznb.*
cju2xlcqxy9c60988vjacdznb.*
cju3y21quj0ir0818kgjagr15  --------
img: 256347
mask: 256347
cju1f15k3w4ct0835cmde6ypo  --------
img: 234234
mask: 234234
cju13cgqmnhwn0988yrainhcp.*
cju13cgqmnhwn0988yrainhcp.*
cju2xlcqxy9c60988vjacdznb  --------
img: 245520
mask: 245520
cju88trl3ogi208716qvti51b.*
cju88trl3ogi208716qvti51b.*
cju7dglf226g50987ohbthl19.*
cju7dglf226g50987ohbthl19.*
cju13cgqmnhwn0988yrainhcp  --------
img: 256347
mask: 256347
cju88trl3ogi208716qvti51b  --------
img: 214650
mask: 214650
208.*
208.*
cju7dglf226g50987ohbthl19  --------
img: 245520
mask: 245520
208  --------
img: 82944
mask: 27648
cju7cq6su27qv075574dir0r3.*
cju7cq6su27qv075574dir0r3.*
cju5boicjagt20871b1fotkh4.*
cju5boicjagt20871b1fotkh4.*
cju7cq6su27qv075574dir0r3  --------
img: 247245
mask: 247245
cju5boicjagt20871b1fotkh4  --------
img: 246312
mask: 246312
cju41p90plcsx08018cnzpndc.*
cju41p90plcsx08018cnzpndc.*
cju6xlygpw7bs0818n691jsq4.*
cju6xlygpw7bs0818n691jsq4.*
cju6xlygpw7bs0818n691jsq4  --------
img: 226575
mask: 226575
cju41p90plcsx08018cnzpndc  --------
img: 246312
mask: 246312
cju41kd7yl4nm0850gil5qqwh.*
cju41kd7yl4nm0850gil5qqwh.*
cju5yclrymlgj0818k426ud6z.*
cju5yclrymlgj0818k426ud6z.*
cju41kd7yl4nm0850gil5qqwh  --------
img: 212265
mask: 212265
cju5yclrymlgj0818k426ud6z  --------
img: 246312
mask: 246312
cju2srvy5440s0801y1ba9akr.*
cju2srvy5440s0801y1ba9akr.*
cju2srvy5440s0801y1ba9akr  --------
img: 246312
mask: 246312
346.*
346.*
346  --------
img: 82944
mask: 27648
607.*
607.*
607  --------
img: 82944
mask: 27648
cjyztzaqtrv430848l8xgcerw.*
cjyztzaqtrv430848l8xgcerw.*
cjyztzaqtrv430848l8xgcerw  --------
img: 311040
mask: 311040
144.*
144.*
144  --------
img: 82944
mask: 27648
cju87zv8lni0o0850hbbecbq6.*
cju87zv8lni0o0850hbbecbq6.*
cju87zv8lni0o0850hbbecbq6  --------
img: 246312
mask: 246312
INFO: Starting training:
        Epochs:          5
        Batch size:      5
        Learning rate:   1e-05
        Training size:   1305
        Validation size: 145
        Checkpoints:     True
        Device:          cuda
        Images scaling:  0.5
        Mixed Precision: True
Epoch 1/5:   0%|                                                                     | 0/1305 [00:00<?, ?img/s]
Traceback (most recent call last):
  File "train.py", line 188, in <module>
    amp=args.amp)
  File "train.py", line 76, in train_net
    for batch in train_loader:
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 521, in __next__
    data = self._next_data()
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1203, in _next_data
    return self._process_data(data)
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1229, in _process_data
    data.reraise()
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/_utils.py", line 434, in reraise
    raise exception
RuntimeError: Caught RuntimeError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/worker.py", line 287, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    return self.collate_fn(data)
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py", line 74, in default_collate
    return {key: default_collate([d[key] for d in batch]) for key in elem}
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py", line 74, in <dictcomp>
    return {key: default_collate([d[key] for d in batch]) for key in elem}
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py", line 56, in default_collate
    return torch.stack(batch, 0, out=out)
RuntimeError: stack expects each tensor to be equal size, but got [3, 273, 313] at entry 0 and [3, 264, 298] at entry 1