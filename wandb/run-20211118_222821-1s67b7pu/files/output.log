576.*
576.*
cju5f26ebcuai0818xlwh6116.*
cju5f26ebcuai0818xlwh6116.*
cju8arof2qpf20850ifr1bnqj.*
cju8arof2qpf20850ifr1bnqj.*
cju33231uy4gi0993qc7b1jch.*
cju33231uy4gi0993qc7b1jch.*
cju33231uy4gi0993qc7b1jch  ----load----
img: (622, 529)
cju5f26ebcuai0818xlwh6116  ----load----
cju8arof2qpf20850ifr1bnqj  ----load----
mask: (622, 529)
img: (594, 530)
img: (598, 546)
mask: (594, 530)
mask: (598, 546)
576  ----load----
img: (384, 288)
mask: (384, 288)
(192, 144) RGB mask False
(192, 144) L mask True
576  --------
img: 82944
mask: 27648
484.*
484.*
484  ----load----
img: (384, 288)
mask: (384, 288)
(297, 265) RGB mask False
(192, 144) RGB mask False
(192, 144) L mask True
(299, 273) RGB mask False
484  --------
img: 82944
mask: 27648
(311, 264) RGB mask False
cju183od81ff608017ekzif89.*
cju183od81ff608017ekzif89.*
cju183od81ff608017ekzif89  ----load----
img: (622, 511)
mask: (622, 511)
(297, 265) RGB mask True
cju8arof2qpf20850ifr1bnqj  --------
img: 236115
mask: 236115
(299, 273) RGB mask True
(311, 264) RGB mask True
cju5f26ebcuai0818xlwh6116  --------
img: 244881
mask: 244881
cju33231uy4gi0993qc7b1jch  --------
img: 246312
mask: 246312
495.*
495.*
495  ----load----
img: (384, 288)
mask: (384, 288)
cju85dx63lic408017f0l0400.*
cju85dx63lic408017f0l0400.*
cju85dx63lic408017f0l0400  ----load----
img: (595, 528)
mask: (595, 528)
516.*
516.*
516  ----load----
img: (384, 288)
mask: (384, 288)
(192, 144) RGB mask False
(192, 144) L mask True
495  --------
img: 82944
mask: 27648
(311, 255) RGB mask False
34.*
34.*
34  ----load----
img: (384, 288)
mask: (384, 288)
(192, 144) RGB mask False
(192, 144) L mask True
516  --------
img: 82944
mask: 27648
(311, 255) RGB mask True
cju1fm3id6gl50801r3fok20c.*
cju1fm3id6gl50801r3fok20c.*
cju183od81ff608017ekzif89  --------
img: 237915
mask: 237915
cju1fm3id6gl50801r3fok20c  ----load----
img: (622, 531)
mask: (622, 531)
(192, 144) RGB mask False
(297, 264) RGB mask False
(192, 144) L mask True
34  --------
img: 82944
mask: 27648
553.*
553.*
553  ----load----
img: (384, 288)
mask: (384, 288)
cju430pm2lz0y0755jkhcc3d1.*
cju430pm2lz0y0755jkhcc3d1.*
cju430pm2lz0y0755jkhcc3d1  ----load----
img: (626, 547)
mask: (626, 547)
(297, 264) RGB mask True
cju85dx63lic408017f0l0400  --------
img: 235224
mask: 235224
(192, 144) RGB mask False
(192, 144) L mask True
553  --------
img: 82944
mask: 27648
236.*
236.*
236  ----load----
img: (384, 288)
mask: (384, 288)
608.*
608.*
608  ----load----
img: (384, 288)
mask: (384, 288)
(311, 265) RGB mask False
(192, 144) RGB mask False
(192, 144) L mask True
236  --------
img: 82944
mask: 27648
(192, 144) RGB mask False
(192, 144) L mask True
608  --------
img: 82944
mask: 27648
cju7cufm7298k0755j09uf3of.*
cju7cufm7298k0755j09uf3of.*
cju7cufm7298k0755j09uf3of  ----load----
img: (614, 531)
mask: (614, 531)
(311, 265) RGB mask True
cju1fm3id6gl50801r3fok20c  --------
img: 247245
mask: 247245
(313, 273) RGB mask False
cju5vi4nxlc530817uoqm2m7a.*
cju5vi4nxlc530817uoqm2m7a.*
cju5vi4nxlc530817uoqm2m7a  ----load----
img: (619, 530)
mask: (619, 530)
cju7agj961l2r0818z29iq8yn.*
cju7agj961l2r0818z29iq8yn.*
cju7agj961l2r0818z29iq8yn  ----load----
img: (622, 530)
mask: (622, 530)
(313, 273) RGB mask True
cju430pm2lz0y0755jkhcc3d1  --------
img: 256347
mask: 256347
cju7d7aut2a2p0818z4uxc6cd.*
cju7d7aut2a2p0818z4uxc6cd.*
cju7d7aut2a2p0818z4uxc6cd  ----load----
img: (621, 530)
mask: (621, 530)
(307, 265) RGB mask False
(309, 265) RGB mask False
(307, 265) RGB mask True
cju7cufm7298k0755j09uf3of  --------
img: 244065
mask: 244065
(311, 265) RGB mask False
556.*
556.*
556  ----load----
img: (384, 288)
mask: (384, 288)
(309, 265) RGB mask True
cju5vi4nxlc530817uoqm2m7a  --------
img: 245655
mask: 245655
(311, 265) RGB mask True
cju7agj961l2r0818z29iq8yn  --------
img: 247245
mask: 247245
(310, 265) RGB mask False
cju7dp3dw2k4n0755zhe003ad.*
cju7dp3dw2k4n0755zhe003ad.*
cju7dp3dw2k4n0755zhe003ad  ----load----
img: (626, 546)
mask: (626, 546)
(192, 144) RGB mask False
(192, 144) L mask True
556  --------
img: 82944
mask: 27648
326.*
326.*
326  ----load----
img: (384, 288)
mask: (384, 288)
(310, 265) RGB mask True
cju7d7aut2a2p0818z4uxc6cd  --------
img: 246450
mask: 246450
(192, 144) RGB mask False
(192, 144) L mask True
326  --------
img: 82944
mask: 27648
cju2yljr0yzhw0988ecf271ly.*
cju2yljr0yzhw0988ecf271ly.*
cju2yljr0yzhw0988ecf271ly  ----load----
img: (1220, 1009)
mask: (1220, 1009)
550.*
550.*
550  ----load----
img: (384, 288)
mask: (384, 288)
215.*
215.*
215  ----load----
img: (384, 288)
mask: (384, 288)
(313, 273) RGB mask False
(192, 144) RGB mask False
(192, 144) L mask True
550  --------
img: 82944
mask: 27648
(192, 144) RGB mask False
cju7bmi1v1pnj0987pa52jjok.*
cju7bmi1v1pnj0987pa52jjok.*
(192, 144) L mask True
215  --------
img: 82944
mask: 27648
cju7bmi1v1pnj0987pa52jjok  ----load----
img: (614, 530)
mask: (614, 530)
(313, 273) RGB mask True
cju7dp3dw2k4n0755zhe003ad  --------
img: 256347
mask: 256347
309.*
309.*
309  ----load----
img: (384, 288)
mask: (384, 288)
(192, 144) RGB mask False
(192, 144) L mask True
309  --------
img: 82944
mask: 27648
509.*
509.*
509  ----load----
img: (384, 288)
mask: (384, 288)
cjyzuio1qgh040763k56deohv.*
cjyzuio1qgh040763k56deohv.*
cjyzuio1qgh040763k56deohv  ----load----
img: (720, 576)
mask: (720, 576)
(307, 265) RGB mask False
(192, 144) RGB mask False
(192, 144) L mask True
509  --------
img: 82944
mask: 27648
376.*
376.*
376  ----load----
img: (384, 288)
mask: (384, 288)
(307, 265) RGB mask True
cju7bmi1v1pnj0987pa52jjok  --------
img: 244065
mask: 244065
(192, 144) RGB mask False
352.*
352.*
352  ----load----
img: (384, 288)
mask: (384, 288)
(192, 144) L mask True
376  --------
img: 82944
mask: 27648
cju857ad0l88m0817qx4cwxnf.*
cju857ad0l88m0817qx4cwxnf.*
cju857ad0l88m0817qx4cwxnf  ----load----
img: (623, 529)
mask: (623, 529)
(192, 144) RGB mask False
(192, 144) L mask True
352  --------
img: 82944
mask: 27648
(360, 288) RGB mask False
283.*
283.*
283  ----load----
img: (384, 288)
mask: (384, 288)
(360, 288) RGB mask True
cjyzuio1qgh040763k56deohv  --------
img: 311040
mask: 311040
cju6wn57mvooj0850rp78hhy7.*
cju6wn57mvooj0850rp78hhy7.*
cju6wn57mvooj0850rp78hhy7  ----load----
img: (622, 531)
mask: (622, 531)
(192, 144) RGB mask False
(311, 264) RGB mask False
(192, 144) L mask True
283  --------
img: 82944
mask: 27648
cju2xd75m82720801q4s4ik3n.*
cju2xd75m82720801q4s4ik3n.*
cju2xd75m82720801q4s4ik3n  ----load----
img: (1220, 1011)
mask: (1220, 1011)
(610, 504) RGB mask False
(311, 264) RGB mask True
cju857ad0l88m0817qx4cwxnf  --------
img: 246312
mask: 246312
cju40u30gkuzc0871rq7t666d.*
cju40u30gkuzc0871rq7t666d.*
cju40u30gkuzc0871rq7t666d  ----load----
img: (626, 546)
mask: (626, 546)
(311, 265) RGB mask False
(311, 265) RGB mask True
cju6wn57mvooj0850rp78hhy7  --------
img: 247245
mask: 247245
612.*
612.*
612  ----load----
img: (384, 288)
mask: (384, 288)
(610, 504) RGB mask True
cju2yljr0yzhw0988ecf271ly  --------
img: 922320
mask: 922320
(313, 273) RGB mask False
(192, 144) RGB mask False
(192, 144) L mask True
612  --------
img: 82944
mask: 27648
cju7dubap2g0w0801fgl42mg9.*
cju7dubap2g0w0801fgl42mg9.*
(313, 273) RGB mask True
cju40u30gkuzc0871rq7t666d  --------
img: 256347
mask: 256347
cju7dubap2g0w0801fgl42mg9  ----load----
img: (623, 528)
mask: (623, 528)
cju77t0razbvm080106o56289.*
cju77t0razbvm080106o56289.*
cju77t0razbvm080106o56289  ----load----
img: (570, 528)
mask: (570, 528)
(311, 264) RGB mask False
(285, 264) RGB mask False
(311, 264) RGB mask True
cju7dubap2g0w0801fgl42mg9  --------
img: 246312
mask: 246312
(285, 264) RGB mask True
cju77t0razbvm080106o56289  --------
img: 225720
mask: 225720
7.*
7.*
7  ----load----
img: (384, 288)
mask: (384, 288)
(192, 144) RGB mask False
(610, 505) RGB mask False
(192, 144) L mask True
7  --------
img: 82944
mask: 27648
143.*
143.*
143  ----load----
img: (384, 288)
mask: (384, 288)
(192, 144) RGB mask False
(192, 144) L mask True
143  --------
img: 82944
mask: 27648
cju42m60jlpcm08186kqppzqv.*
cju42m60jlpcm08186kqppzqv.*
cju42m60jlpcm08186kqppzqv  ----load----
img: (626, 547)
mask: (626, 547)
(610, 505) RGB mask True
cju2xd75m82720801q4s4ik3n  --------
img: 924150
mask: 924150
463.*
463.*
463  ----load----
img: (384, 288)
mask: (384, 288)
(313, 273) RGB mask False
(192, 144) RGB mask False
(192, 144) L mask True
463  --------
img: 82944
mask: 27648
(313, 273) RGB mask True
cju42m60jlpcm08186kqppzqv  --------
img: 256347
mask: 256347
cju13fwthn9mq0835gacxgy01.*
cju13fwthn9mq0835gacxgy01.*
cju13fwthn9mq0835gacxgy01  ----load----
img: (623, 529)
mask: (623, 529)
(311, 264) RGB mask False
(311, 264) RGB mask True
cju13fwthn9mq0835gacxgy01  --------
img: 246312
mask: 246312
268.*
268.*
268  ----load----
img: (384, 288)
mask: (384, 288)
(192, 144) RGB mask False
(192, 144) L mask True
268  --------
img: 82944
mask: 27648
INFO: Starting training:
        Epochs:          5
        Batch size:      5
        Learning rate:   1e-05
        Training size:   1305
        Validation size: 145
        Checkpoints:     True
        Device:          cuda
        Images scaling:  0.5
        Mixed Precision: True
Epoch 1/5:   0%|                                                                     | 0/1305 [00:00<?, ?img/s]
Traceback (most recent call last):
  File "train.py", line 188, in <module>
    amp=args.amp)
  File "train.py", line 76, in train_net
    for batch in train_loader:
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 521, in __next__
    data = self._next_data()
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1203, in _next_data
    return self._process_data(data)
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1229, in _process_data
    data.reraise()
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/_utils.py", line 434, in reraise
    raise exception
RuntimeError: Caught RuntimeError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/worker.py", line 287, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    return self.collate_fn(data)
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py", line 74, in default_collate
    return {key: default_collate([d[key] for d in batch]) for key in elem}
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py", line 74, in <dictcomp>
    return {key: default_collate([d[key] for d in batch]) for key in elem}
  File "/home/nicolas/anaconda3/envs/josue_torch/lib/python3.7/site-packages/torch/utils/data/_utils/collate.py", line 56, in default_collate
    return torch.stack(batch, 0, out=out)
RuntimeError: stack expects each tensor to be equal size, but got [3, 144, 192] at entry 0 and [3, 255, 311] at entry 2